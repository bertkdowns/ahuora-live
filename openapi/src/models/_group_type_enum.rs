/*
 * Your Project API
 *
 * Your project description
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// GroupTypeEnum : * `UserSelected` - Userselected * `Threshold` - Threshold * `Abstract` - Abstract
/// * `UserSelected` - Userselected * `Threshold` - Threshold * `Abstract` - Abstract
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum GroupTypeEnum {
    #[serde(rename = "UserSelected")]
    UserSelected,
    #[serde(rename = "Threshold")]
    Threshold,
    #[serde(rename = "Abstract")]
    Abstract,

}

impl std::fmt::Display for GroupTypeEnum {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::UserSelected => write!(f, "UserSelected"),
            Self::Threshold => write!(f, "Threshold"),
            Self::Abstract => write!(f, "Abstract"),
        }
    }
}

impl Default for GroupTypeEnum {
    fn default() -> GroupTypeEnum {
        Self::UserSelected
    }
}

