/*
 * Your Project API
 *
 * Your project description
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};


/// CoolerCalculationModeEnum : * `HeatRemoved` - Heatremoved * `OutletTemperature` - Outlettemperature * `OutletVaporFraction` - Outletvaporfraction * `TemperatureChange` - Temperaturechange * `EnergyStream` - Energystream
/// * `HeatRemoved` - Heatremoved * `OutletTemperature` - Outlettemperature * `OutletVaporFraction` - Outletvaporfraction * `TemperatureChange` - Temperaturechange * `EnergyStream` - Energystream
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum CoolerCalculationModeEnum {
    #[serde(rename = "HeatRemoved")]
    HeatRemoved,
    #[serde(rename = "OutletTemperature")]
    OutletTemperature,
    #[serde(rename = "OutletVaporFraction")]
    OutletVaporFraction,
    #[serde(rename = "TemperatureChange")]
    TemperatureChange,
    #[serde(rename = "EnergyStream")]
    EnergyStream,

}

impl std::fmt::Display for CoolerCalculationModeEnum {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::HeatRemoved => write!(f, "HeatRemoved"),
            Self::OutletTemperature => write!(f, "OutletTemperature"),
            Self::OutletVaporFraction => write!(f, "OutletVaporFraction"),
            Self::TemperatureChange => write!(f, "TemperatureChange"),
            Self::EnergyStream => write!(f, "EnergyStream"),
        }
    }
}

impl Default for CoolerCalculationModeEnum {
    fn default() -> CoolerCalculationModeEnum {
        Self::HeatRemoved
    }
}

