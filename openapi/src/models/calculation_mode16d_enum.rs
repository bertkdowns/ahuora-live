/*
 * Your Project API
 *
 * Your project description
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// CalculationMode16dEnum : * `Average` - Average * `Maximum` - Maximum * `Minimum` - Minimum
/// * `Average` - Average * `Maximum` - Maximum * `Minimum` - Minimum
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum CalculationMode16dEnum {
    #[serde(rename = "Average")]
    Average,
    #[serde(rename = "Maximum")]
    Maximum,
    #[serde(rename = "Minimum")]
    Minimum,

}

impl std::fmt::Display for CalculationMode16dEnum {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Average => write!(f, "Average"),
            Self::Maximum => write!(f, "Maximum"),
            Self::Minimum => write!(f, "Minimum"),
        }
    }
}

impl Default for CalculationMode16dEnum {
    fn default() -> CalculationMode16dEnum {
        Self::Average
    }
}

