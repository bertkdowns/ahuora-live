/*
 * Your Project API
 *
 * Your project description
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// SpecVarTypeEnum : * `Source` - Source * `Target` - Target * `None` - Noneselected
/// * `Source` - Source * `Target` - Target * `None` - Noneselected
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum SpecVarTypeEnum {
    #[serde(rename = "Source")]
    Source,
    #[serde(rename = "Target")]
    Target,
    #[serde(rename = "None")]
    None,

}

impl std::fmt::Display for SpecVarTypeEnum {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Source => write!(f, "Source"),
            Self::Target => write!(f, "Target"),
            Self::None => write!(f, "None"),
        }
    }
}

impl Default for SpecVarTypeEnum {
    fn default() -> SpecVarTypeEnum {
        Self::Source
    }
}

