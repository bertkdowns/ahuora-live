/*
 * Your Project API
 *
 * Your project description
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// FilterCalculationModeEnum : * `Design` - Design * `Simulation` - Simulation
/// * `Design` - Design * `Simulation` - Simulation
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum FilterCalculationModeEnum {
    #[serde(rename = "Design")]
    Design,
    #[serde(rename = "Simulation")]
    Simulation,

}

impl std::fmt::Display for FilterCalculationModeEnum {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Design => write!(f, "Design"),
            Self::Simulation => write!(f, "Simulation"),
        }
    }
}

impl Default for FilterCalculationModeEnum {
    fn default() -> FilterCalculationModeEnum {
        Self::Design
    }
}

