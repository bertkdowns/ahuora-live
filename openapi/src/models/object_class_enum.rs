/*
 * Your Project API
 *
 * Your project description
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};


/// ObjectClassEnum : * `Mixer` - Mixer * `Splitter` - Splitter * `NodeEn` - Nodeen * `Pump` - Pump * `Tank` - Tank * `Vessel` - Vessel * `MaterialStream` - Materialstream * `EnergyStream` - Energystream * `Compressor` - Compressor * `Expander` - Expander * `TPVessel` - Tpvessel * `Cooler` - Cooler * `Heater` - Heater * `Pipe` - Pipe * `Valve` - Valve * `OT_Adjust` - Ot Adjust * `OT_Spec` - Ot Spec * `OT_Recycle` - Ot Recycle * `RCT_Conversion` - Rct Conversion * `RCT_Equilibrium` - Rct Equilibrium * `RCT_Gibbs` - Rct Gibbs * `RCT_CSTR` - Rct Cstr * `RCT_PFR` - Rct Pfr * `HeatExchanger` - Heatexchanger * `ShortcutColumn` - Shortcutcolumn * `DistillationColumn` - Distillationcolumn * `AbsorptionColumn` - Absorptioncolumn * `RefluxedAbsorber` - Refluxedabsorber * `ReboiledAbsorber` - Reboiledabsorber * `OT_EnergyRecycle` - Ot Energyrecycle * `ComponentSeparator` - Componentseparator * `OrificePlate` - Orificeplate * `CustomUO` - Customuo * `ExcelUO` - Exceluo * `CapeOpenUO` - Capeopenuo * `FlowsheetUO` - Flowsheetuo * `SolidSeparator` - Solidseparator * `Filter` - Filter * `CompressorExpander` - Compressorexpander * `HeaterCooler` - Heatercooler * `External` - External * `AnalogGauge` - Analoggauge * `DigitalGauge` - Digitalgauge * `LevelGauge` - Levelgauge * `Controller_PID` - Controller Pid * `Switch` - Switch * `Input` - Input * `Grouping` - Grouping * `AbstractProcess` - Abstractprocess
/// * `Mixer` - Mixer * `Splitter` - Splitter * `NodeEn` - Nodeen * `Pump` - Pump * `Tank` - Tank * `Vessel` - Vessel * `MaterialStream` - Materialstream * `EnergyStream` - Energystream * `Compressor` - Compressor * `Expander` - Expander * `TPVessel` - Tpvessel * `Cooler` - Cooler * `Heater` - Heater * `Pipe` - Pipe * `Valve` - Valve * `OT_Adjust` - Ot Adjust * `OT_Spec` - Ot Spec * `OT_Recycle` - Ot Recycle * `RCT_Conversion` - Rct Conversion * `RCT_Equilibrium` - Rct Equilibrium * `RCT_Gibbs` - Rct Gibbs * `RCT_CSTR` - Rct Cstr * `RCT_PFR` - Rct Pfr * `HeatExchanger` - Heatexchanger * `ShortcutColumn` - Shortcutcolumn * `DistillationColumn` - Distillationcolumn * `AbsorptionColumn` - Absorptioncolumn * `RefluxedAbsorber` - Refluxedabsorber * `ReboiledAbsorber` - Reboiledabsorber * `OT_EnergyRecycle` - Ot Energyrecycle * `ComponentSeparator` - Componentseparator * `OrificePlate` - Orificeplate * `CustomUO` - Customuo * `ExcelUO` - Exceluo * `CapeOpenUO` - Capeopenuo * `FlowsheetUO` - Flowsheetuo * `SolidSeparator` - Solidseparator * `Filter` - Filter * `CompressorExpander` - Compressorexpander * `HeaterCooler` - Heatercooler * `External` - External * `AnalogGauge` - Analoggauge * `DigitalGauge` - Digitalgauge * `LevelGauge` - Levelgauge * `Controller_PID` - Controller Pid * `Switch` - Switch * `Input` - Input * `Grouping` - Grouping * `AbstractProcess` - Abstractprocess
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ObjectClassEnum {
    #[serde(rename = "Mixer")]
    Mixer,
    #[serde(rename = "Splitter")]
    Splitter,
    #[serde(rename = "NodeEn")]
    NodeEn,
    #[serde(rename = "Pump")]
    Pump,
    #[serde(rename = "Tank")]
    Tank,
    #[serde(rename = "Vessel")]
    Vessel,
    #[serde(rename = "MaterialStream")]
    MaterialStream,
    #[serde(rename = "EnergyStream")]
    EnergyStream,
    #[serde(rename = "Compressor")]
    Compressor,
    #[serde(rename = "Expander")]
    Expander,
    #[serde(rename = "TPVessel")]
    TpVessel,
    #[serde(rename = "Cooler")]
    Cooler,
    #[serde(rename = "Heater")]
    Heater,
    #[serde(rename = "Pipe")]
    Pipe,
    #[serde(rename = "Valve")]
    Valve,
    #[serde(rename = "OT_Adjust")]
    OtAdjust,
    #[serde(rename = "OT_Spec")]
    OtSpec,
    #[serde(rename = "OT_Recycle")]
    OtRecycle,
    #[serde(rename = "RCT_Conversion")]
    RctConversion,
    #[serde(rename = "RCT_Equilibrium")]
    RctEquilibrium,
    #[serde(rename = "RCT_Gibbs")]
    RctGibbs,
    #[serde(rename = "RCT_CSTR")]
    RctCstr,
    #[serde(rename = "RCT_PFR")]
    RctPfr,
    #[serde(rename = "HeatExchanger")]
    HeatExchanger,
    #[serde(rename = "ShortcutColumn")]
    ShortcutColumn,
    #[serde(rename = "DistillationColumn")]
    DistillationColumn,
    #[serde(rename = "AbsorptionColumn")]
    AbsorptionColumn,
    #[serde(rename = "RefluxedAbsorber")]
    RefluxedAbsorber,
    #[serde(rename = "ReboiledAbsorber")]
    ReboiledAbsorber,
    #[serde(rename = "OT_EnergyRecycle")]
    OtEnergyRecycle,
    #[serde(rename = "ComponentSeparator")]
    ComponentSeparator,
    #[serde(rename = "OrificePlate")]
    OrificePlate,
    #[serde(rename = "CustomUO")]
    CustomUo,
    #[serde(rename = "ExcelUO")]
    ExcelUo,
    #[serde(rename = "CapeOpenUO")]
    CapeOpenUo,
    #[serde(rename = "FlowsheetUO")]
    FlowsheetUo,
    #[serde(rename = "SolidSeparator")]
    SolidSeparator,
    #[serde(rename = "Filter")]
    Filter,
    #[serde(rename = "CompressorExpander")]
    CompressorExpander,
    #[serde(rename = "HeaterCooler")]
    HeaterCooler,
    #[serde(rename = "External")]
    External,
    #[serde(rename = "AnalogGauge")]
    AnalogGauge,
    #[serde(rename = "DigitalGauge")]
    DigitalGauge,
    #[serde(rename = "LevelGauge")]
    LevelGauge,
    #[serde(rename = "Controller_PID")]
    ControllerPid,
    #[serde(rename = "Switch")]
    Switch,
    #[serde(rename = "Input")]
    Input,
    #[serde(rename = "Grouping")]
    Grouping,
    #[serde(rename = "AbstractProcess")]
    AbstractProcess,

}

impl std::fmt::Display for ObjectClassEnum {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Mixer => write!(f, "Mixer"),
            Self::Splitter => write!(f, "Splitter"),
            Self::NodeEn => write!(f, "NodeEn"),
            Self::Pump => write!(f, "Pump"),
            Self::Tank => write!(f, "Tank"),
            Self::Vessel => write!(f, "Vessel"),
            Self::MaterialStream => write!(f, "MaterialStream"),
            Self::EnergyStream => write!(f, "EnergyStream"),
            Self::Compressor => write!(f, "Compressor"),
            Self::Expander => write!(f, "Expander"),
            Self::TpVessel => write!(f, "TPVessel"),
            Self::Cooler => write!(f, "Cooler"),
            Self::Heater => write!(f, "Heater"),
            Self::Pipe => write!(f, "Pipe"),
            Self::Valve => write!(f, "Valve"),
            Self::OtAdjust => write!(f, "OT_Adjust"),
            Self::OtSpec => write!(f, "OT_Spec"),
            Self::OtRecycle => write!(f, "OT_Recycle"),
            Self::RctConversion => write!(f, "RCT_Conversion"),
            Self::RctEquilibrium => write!(f, "RCT_Equilibrium"),
            Self::RctGibbs => write!(f, "RCT_Gibbs"),
            Self::RctCstr => write!(f, "RCT_CSTR"),
            Self::RctPfr => write!(f, "RCT_PFR"),
            Self::HeatExchanger => write!(f, "HeatExchanger"),
            Self::ShortcutColumn => write!(f, "ShortcutColumn"),
            Self::DistillationColumn => write!(f, "DistillationColumn"),
            Self::AbsorptionColumn => write!(f, "AbsorptionColumn"),
            Self::RefluxedAbsorber => write!(f, "RefluxedAbsorber"),
            Self::ReboiledAbsorber => write!(f, "ReboiledAbsorber"),
            Self::OtEnergyRecycle => write!(f, "OT_EnergyRecycle"),
            Self::ComponentSeparator => write!(f, "ComponentSeparator"),
            Self::OrificePlate => write!(f, "OrificePlate"),
            Self::CustomUo => write!(f, "CustomUO"),
            Self::ExcelUo => write!(f, "ExcelUO"),
            Self::CapeOpenUo => write!(f, "CapeOpenUO"),
            Self::FlowsheetUo => write!(f, "FlowsheetUO"),
            Self::SolidSeparator => write!(f, "SolidSeparator"),
            Self::Filter => write!(f, "Filter"),
            Self::CompressorExpander => write!(f, "CompressorExpander"),
            Self::HeaterCooler => write!(f, "HeaterCooler"),
            Self::External => write!(f, "External"),
            Self::AnalogGauge => write!(f, "AnalogGauge"),
            Self::DigitalGauge => write!(f, "DigitalGauge"),
            Self::LevelGauge => write!(f, "LevelGauge"),
            Self::ControllerPid => write!(f, "Controller_PID"),
            Self::Switch => write!(f, "Switch"),
            Self::Input => write!(f, "Input"),
            Self::Grouping => write!(f, "Grouping"),
            Self::AbstractProcess => write!(f, "AbstractProcess"),
        }
    }
}

impl Default for ObjectClassEnum {
    fn default() -> ObjectClassEnum {
        Self::Mixer
    }
}

