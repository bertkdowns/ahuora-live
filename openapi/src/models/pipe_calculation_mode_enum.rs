/*
 * Your Project API
 *
 * Your project description
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};


/// PipeCalculationModeEnum : * `Length` - Length * `OutletPressure` - Outletpressure * `OutletTemperature` - Outlettemperature
/// * `Length` - Length * `OutletPressure` - Outletpressure * `OutletTemperature` - Outlettemperature
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum PipeCalculationModeEnum {
    #[serde(rename = "Length")]
    Length,
    #[serde(rename = "OutletPressure")]
    OutletPressure,
    #[serde(rename = "OutletTemperature")]
    OutletTemperature,

}

impl std::fmt::Display for PipeCalculationModeEnum {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Length => write!(f, "Length"),
            Self::OutletPressure => write!(f, "OutletPressure"),
            Self::OutletTemperature => write!(f, "OutletTemperature"),
        }
    }
}

impl Default for PipeCalculationModeEnum {
    fn default() -> PipeCalculationModeEnum {
        Self::Length
    }
}

