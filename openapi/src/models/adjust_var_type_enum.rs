/*
 * Your Project API
 *
 * Your project description
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// AdjustVarTypeEnum : * `Manipulated` - Manipulated * `Controlled` - Controlled * `Reference` - Reference * `None` - Noneselected
/// * `Manipulated` - Manipulated * `Controlled` - Controlled * `Reference` - Reference * `None` - Noneselected
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum AdjustVarTypeEnum {
    #[serde(rename = "Manipulated")]
    Manipulated,
    #[serde(rename = "Controlled")]
    Controlled,
    #[serde(rename = "Reference")]
    Reference,
    #[serde(rename = "None")]
    None,

}

impl std::fmt::Display for AdjustVarTypeEnum {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Manipulated => write!(f, "Manipulated"),
            Self::Controlled => write!(f, "Controlled"),
            Self::Reference => write!(f, "Reference"),
            Self::None => write!(f, "None"),
        }
    }
}

impl Default for AdjustVarTypeEnum {
    fn default() -> AdjustVarTypeEnum {
        Self::Manipulated
    }
}

