/*
 * Your Project API
 *
 * Your project description
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// PropertyInfoTypeEnum : * `numeric` - Numeric * `dropdown` - Dropdown * `checkbox` - Checkbox * `segmented` - Segmented
/// * `numeric` - Numeric * `dropdown` - Dropdown * `checkbox` - Checkbox * `segmented` - Segmented
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum PropertyInfoTypeEnum {
    #[serde(rename = "numeric")]
    Numeric,
    #[serde(rename = "dropdown")]
    Dropdown,
    #[serde(rename = "checkbox")]
    Checkbox,
    #[serde(rename = "segmented")]
    Segmented,

}

impl std::fmt::Display for PropertyInfoTypeEnum {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Numeric => write!(f, "numeric"),
            Self::Dropdown => write!(f, "dropdown"),
            Self::Checkbox => write!(f, "checkbox"),
            Self::Segmented => write!(f, "segmented"),
        }
    }
}

impl Default for PropertyInfoTypeEnum {
    fn default() -> PropertyInfoTypeEnum {
        Self::Numeric
    }
}

