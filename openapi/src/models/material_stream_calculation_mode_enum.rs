/*
 * Your Project API
 *
 * Your project description
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};


/// MaterialStreamCalculationModeEnum : * `Temperature and Pressure` - Temperature And Pressure * `Pressure and Enthalpy` - Pressure And Enthalpy * `Pressure_and Entropy` - Pressure And Entropy * `Pressure and VaporFraction` - Pressure And Vaporfraction * `Temperature and VaporFraction` - Temperature And Vaporfraction * `Pressure and SolidFraction` - Pressure And Solidfraction * `Volume and Temperature` - Volume And Temperature * `Volume and Enthalpy` - Volume And Enthalpy * `Volume and Entropy` - Volume And Entropy
/// * `Temperature and Pressure` - Temperature And Pressure * `Pressure and Enthalpy` - Pressure And Enthalpy * `Pressure_and Entropy` - Pressure And Entropy * `Pressure and VaporFraction` - Pressure And Vaporfraction * `Temperature and VaporFraction` - Temperature And Vaporfraction * `Pressure and SolidFraction` - Pressure And Solidfraction * `Volume and Temperature` - Volume And Temperature * `Volume and Enthalpy` - Volume And Enthalpy * `Volume and Entropy` - Volume And Entropy
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum MaterialStreamCalculationModeEnum {
    #[serde(rename = "Temperature and Pressure")]
    TemperatureAndPressure,
    #[serde(rename = "Pressure and Enthalpy")]
    PressureAndEnthalpy,
    #[serde(rename = "Pressure_and Entropy")]
    PressureAndEntropy,
    #[serde(rename = "Pressure and VaporFraction")]
    PressureAndVaporFraction,
    #[serde(rename = "Temperature and VaporFraction")]
    TemperatureAndVaporFraction,
    #[serde(rename = "Pressure and SolidFraction")]
    PressureAndSolidFraction,
    #[serde(rename = "Volume and Temperature")]
    VolumeAndTemperature,
    #[serde(rename = "Volume and Enthalpy")]
    VolumeAndEnthalpy,
    #[serde(rename = "Volume and Entropy")]
    VolumeAndEntropy,

}

impl std::fmt::Display for MaterialStreamCalculationModeEnum {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::TemperatureAndPressure => write!(f, "Temperature and Pressure"),
            Self::PressureAndEnthalpy => write!(f, "Pressure and Enthalpy"),
            Self::PressureAndEntropy => write!(f, "Pressure_and Entropy"),
            Self::PressureAndVaporFraction => write!(f, "Pressure and VaporFraction"),
            Self::TemperatureAndVaporFraction => write!(f, "Temperature and VaporFraction"),
            Self::PressureAndSolidFraction => write!(f, "Pressure and SolidFraction"),
            Self::VolumeAndTemperature => write!(f, "Volume and Temperature"),
            Self::VolumeAndEnthalpy => write!(f, "Volume and Enthalpy"),
            Self::VolumeAndEntropy => write!(f, "Volume and Entropy"),
        }
    }
}

impl Default for MaterialStreamCalculationModeEnum {
    fn default() -> MaterialStreamCalculationModeEnum {
        Self::TemperatureAndPressure
    }
}

