/*
 * Your Project API
 *
 * Your project description
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};


/// ForcePhaseEnum : * `None` - Noneselected * `Vapor` - Vapor * `Liquid` - Liquid * `Solid` - Solid * `GlobalDef` - Globaldef
/// * `None` - Noneselected * `Vapor` - Vapor * `Liquid` - Liquid * `Solid` - Solid * `GlobalDef` - Globaldef
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ForcePhaseEnum {
    #[serde(rename = "None")]
    None,
    #[serde(rename = "Vapor")]
    Vapor,
    #[serde(rename = "Liquid")]
    Liquid,
    #[serde(rename = "Solid")]
    Solid,
    #[serde(rename = "GlobalDef")]
    GlobalDef,

}

impl std::fmt::Display for ForcePhaseEnum {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::None => write!(f, "None"),
            Self::Vapor => write!(f, "Vapor"),
            Self::Liquid => write!(f, "Liquid"),
            Self::Solid => write!(f, "Solid"),
            Self::GlobalDef => write!(f, "GlobalDef"),
        }
    }
}

impl Default for ForcePhaseEnum {
    fn default() -> ForcePhaseEnum {
        Self::None
    }
}

