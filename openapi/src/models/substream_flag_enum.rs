/*
 * Your Project API
 *
 * Your project description
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};


/// SubstreamFlagEnum : * `Start` - Start * `Middle` - Middle * `End` - End * `NA` - Na
/// * `Start` - Start * `Middle` - Middle * `End` - End * `NA` - Na
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum SubstreamFlagEnum {
    #[serde(rename = "Start")]
    Start,
    #[serde(rename = "Middle")]
    Middle,
    #[serde(rename = "End")]
    End,
    #[serde(rename = "NA")]
    Na,

}

impl std::fmt::Display for SubstreamFlagEnum {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Start => write!(f, "Start"),
            Self::Middle => write!(f, "Middle"),
            Self::End => write!(f, "End"),
            Self::Na => write!(f, "NA"),
        }
    }
}

impl Default for SubstreamFlagEnum {
    fn default() -> SubstreamFlagEnum {
        Self::Start
    }
}

