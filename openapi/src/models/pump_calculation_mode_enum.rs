/*
 * Your Project API
 *
 * Your project description
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// PumpCalculationModeEnum : * `Pressure Difference` - Delta P * `OutletPressure` - Outletpressure * `EnergyStream` - Energystream * `Curves` - Curves * `Power` - Power
/// * `Pressure Difference` - Delta P * `OutletPressure` - Outletpressure * `EnergyStream` - Energystream * `Curves` - Curves * `Power` - Power
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum PumpCalculationModeEnum {
    #[serde(rename = "Pressure Difference")]
    PressureDifference,
    #[serde(rename = "OutletPressure")]
    OutletPressure,
    #[serde(rename = "EnergyStream")]
    EnergyStream,
    #[serde(rename = "Curves")]
    Curves,
    #[serde(rename = "Power")]
    Power,

}

impl std::fmt::Display for PumpCalculationModeEnum {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::PressureDifference => write!(f, "Pressure Difference"),
            Self::OutletPressure => write!(f, "OutletPressure"),
            Self::EnergyStream => write!(f, "EnergyStream"),
            Self::Curves => write!(f, "Curves"),
            Self::Power => write!(f, "Power"),
        }
    }
}

impl Default for PumpCalculationModeEnum {
    fn default() -> PumpCalculationModeEnum {
        Self::PressureDifference
    }
}

