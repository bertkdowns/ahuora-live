/*
 * Your Project API
 *
 * Your project description
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// StatusEnum : * `Calculated` - Calculated * `Calculating` - Calculating * `ErrorCalculating` - Errorcalculating * `Inactive` - Inactive * `Idle` - Idle * `NotCalculated` - Notcalculated * `Modified` - Modified
/// * `Calculated` - Calculated * `Calculating` - Calculating * `ErrorCalculating` - Errorcalculating * `Inactive` - Inactive * `Idle` - Idle * `NotCalculated` - Notcalculated * `Modified` - Modified
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum StatusEnum {
    #[serde(rename = "Calculated")]
    Calculated,
    #[serde(rename = "Calculating")]
    Calculating,
    #[serde(rename = "ErrorCalculating")]
    ErrorCalculating,
    #[serde(rename = "Inactive")]
    Inactive,
    #[serde(rename = "Idle")]
    Idle,
    #[serde(rename = "NotCalculated")]
    NotCalculated,
    #[serde(rename = "Modified")]
    Modified,

}

impl std::fmt::Display for StatusEnum {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Calculated => write!(f, "Calculated"),
            Self::Calculating => write!(f, "Calculating"),
            Self::ErrorCalculating => write!(f, "ErrorCalculating"),
            Self::Inactive => write!(f, "Inactive"),
            Self::Idle => write!(f, "Idle"),
            Self::NotCalculated => write!(f, "NotCalculated"),
            Self::Modified => write!(f, "Modified"),
        }
    }
}

impl Default for StatusEnum {
    fn default() -> StatusEnum {
        Self::Calculated
    }
}

