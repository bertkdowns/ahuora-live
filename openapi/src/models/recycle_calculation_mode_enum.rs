/*
 * Your Project API
 *
 * Your project description
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// RecycleCalculationModeEnum : * `None` - Noneselected * `Wegstein` - Wegstein * `Dominant_Eigenvalue` - Dominant Eigenvalue * `GlobalBroyden` - Globalbroyden
/// * `None` - Noneselected * `Wegstein` - Wegstein * `Dominant_Eigenvalue` - Dominant Eigenvalue * `GlobalBroyden` - Globalbroyden
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum RecycleCalculationModeEnum {
    #[serde(rename = "None")]
    None,
    #[serde(rename = "Wegstein")]
    Wegstein,
    #[serde(rename = "Dominant_Eigenvalue")]
    DominantEigenvalue,
    #[serde(rename = "GlobalBroyden")]
    GlobalBroyden,

}

impl std::fmt::Display for RecycleCalculationModeEnum {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::None => write!(f, "None"),
            Self::Wegstein => write!(f, "Wegstein"),
            Self::DominantEigenvalue => write!(f, "Dominant_Eigenvalue"),
            Self::GlobalBroyden => write!(f, "GlobalBroyden"),
        }
    }
}

impl Default for RecycleCalculationModeEnum {
    fn default() -> RecycleCalculationModeEnum {
        Self::None
    }
}

