/*
 * Your Project API
 *
 * Your project description
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};


/// SplitterCalculationModeEnum : * `SplitRatios` - Splitratios * `StreamMassFlowSpec` - Streammassflowspec * `StreamMoleFlowSpec` - Streammoleflowspec
/// * `SplitRatios` - Splitratios * `StreamMassFlowSpec` - Streammassflowspec * `StreamMoleFlowSpec` - Streammoleflowspec
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum SplitterCalculationModeEnum {
    #[serde(rename = "SplitRatios")]
    SplitRatios,
    #[serde(rename = "StreamMassFlowSpec")]
    StreamMassFlowSpec,
    #[serde(rename = "StreamMoleFlowSpec")]
    StreamMoleFlowSpec,

}

impl std::fmt::Display for SplitterCalculationModeEnum {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::SplitRatios => write!(f, "SplitRatios"),
            Self::StreamMassFlowSpec => write!(f, "StreamMassFlowSpec"),
            Self::StreamMoleFlowSpec => write!(f, "StreamMoleFlowSpec"),
        }
    }
}

impl Default for SplitterCalculationModeEnum {
    fn default() -> SplitterCalculationModeEnum {
        Self::SplitRatios
    }
}

